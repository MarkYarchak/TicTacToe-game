{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/board/board.component.ts","webpack:///src/app/game/board/board.component.html","webpack:///src/app/game/board/cell/cell.component.ts","webpack:///src/app/game/board/cell/cell.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/game/nav-drawer/nav-drawer.component.ts","webpack:///src/app/game/nav-drawer/nav-drawer.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","BoardComponent","makePlayerMove","index","boardCells","emit","CellComponent","GameComponent","currentPlayer","user","name","password","w","winner","clearBoard","setDefaultPlayer","map","undefined","every","cell","canWin","find","player","winningCombinations","combination","num","startNewGame","NavDrawerComponent","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n}\n","<app-game></app-game>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { GameComponent } from './game/game.component';\nimport { BoardComponent } from './game/board/board.component';\nimport { CellComponent } from './game/board/cell/cell.component';\nimport { NavDrawerComponent } from './game/nav-drawer/nav-drawer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    BoardComponent,\n    CellComponent,\n    NavDrawerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Output, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.styl'],\n})\nexport class BoardComponent {\n  @Output() makePlayerMove = new EventEmitter();\n  @Input() currentPlayer;\n\n  @Input() boardCells: Array<string | number>;\n\n  makeAMove(index) {\n    if (this.boardCells[index] === '') {\n      this.makePlayerMove.emit(index);\n    }\n  }\n}\n","<div class=\"game-board\">\n  <app-board-cell\n    *ngFor=\"let cell of boardCells; let i = index\"\n    [cellContent]=\"cell\"\n    (click)=\"makeAMove(i)\"\n  ></app-board-cell>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-board-cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.styl']\n})\nexport class CellComponent {\n  @Input() cellContent;\n}\n","<div class=\"board-cell\">\n  <img\n    *ngIf=\"cellContent === 1\"\n    src=\"/assets/cross.svg\" alt=\"\"\n  >\n  <div\n    *ngIf=\"cellContent === 0\"\n    class=\"cell-empty-circle\"\n  ></div>\n</div>\n","import { Component } from '@angular/core';\n\ntype Player = 0 | 1;\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.styl']\n})\nexport class GameComponent {\n\n  boardCells: Array<number | string> = ['', '', '', '', '', '', '', '' , ''];\n\n  currentPlayer: Player = 1;\n\n  user = {\n    name: 'Mark Yarchak',\n    password: 'secret',\n  };\n\n  get winningCombinations() {\n    return [\n      // horizontal lines\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      // vertical lines\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      // diagonal lines\n      [0, 4, 8],\n      [6, 4, 2],\n    ];\n  }\n\n  get noWinner() {\n    return this.winner === undefined && this.boardCells.every(cell => cell !== '');\n  }\n\n  get winner(): Player {\n    const canWin: Player[] = [0, 1];\n    return canWin.find((player) => {\n      return this.winningCombinations.find((combination) => {\n        return combination.every(num => this.boardCells[num] === player);\n      });\n    });\n  }\n\n  makePlayerMove(index): void {\n    const w = this.winner;\n    if (w !== 1 && w !== 0) {\n      this.boardCells[index] = this.currentPlayer;\n      this.currentPlayer = !this.currentPlayer ? 1 : 0;\n    }\n  }\n\n  startNewGame() {\n    this.clearBoard();\n    this.setDefaultPlayer();\n  }\n\n  setDefaultPlayer() {\n    this.currentPlayer = 1;\n  }\n\n  clearBoard() {\n    this.boardCells = this.boardCells.map(() => '');\n  }\n}\n","<div class=\"game-page\">\n  <app-nav-drawer\n    [winner]=\"winner\"\n    [noWinner]=\"noWinner\"\n    [currentPlayer]=\"currentPlayer\"\n  ></app-nav-drawer>\n  <div class=\"game-page__content\">\n    <div class=\"start-new-game-wrapper\">\n      <button (click)=\"startNewGame()\">Start new game</button>\n    </div>\n    <div class=\"board-wrapper\">\n      <app-board\n        [boardCells]=\"boardCells\"\n        (makePlayerMove)=\"makePlayerMove($event)\"\n      ></app-board>\n    </div>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-nav-drawer',\n  templateUrl: './nav-drawer.component.html',\n  styleUrls: ['./nav-drawer.component.styl']\n})\nexport class NavDrawerComponent {\n\n  constructor() { }\n\n  @Input() noWinner: boolean;\n  @Input() winner;\n  @Input() currentPlayer: number;\n\n}\n","<div class=\"nav-drawer\">\n  <h2>{{ noWinner ? 'No winner' : (winner === 0 || winner === 1) ? 'Winner:' : 'Current player:' }}</h2>\n  <div\n    *ngIf=\"!noWinner\"\n    style=\"display: flex; align-items: center; padding-top: 1px;\"\n  >\n    <svg\n      *ngIf=\"(currentPlayer === 1 || winner === 1) && winner !== 0\"\n      style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\"\n    >\n      <path fill=\"currentColor\" d=\"M20 6.91L17.09 4L12 9.09L6.91 4L4 6.91L9.09 12L4 17.09L6.91 20L12 14.91L17.09 20L20 17.09L14.91 12L20 6.91Z\" />\n    </svg>\n    <svg\n      *ngIf=\"(currentPlayer === 0 || winner === 0) && winner !== 1\"\n      style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\"\n    >\n      <path fill=\"currentColor\" d=\"M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n    </svg>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}